// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.App.Schedule = window.App.Schedule || {};

  (function($) {
    return App.Schedule.Carousel = (function(superClass) {
      extend(Carousel, superClass);

      function Carousel() {
        this.prevItem = bind(this.prevItem, this);
        this.nextItem = bind(this.nextItem, this);
        this.getEpisode = bind(this.getEpisode, this);
        this.renderScheduleItem = bind(this.renderScheduleItem, this);
        return Carousel.__super__.constructor.apply(this, arguments);
      }

      Carousel.prototype.next = ".schedule-carousel-next i";

      Carousel.prototype.prev = ".schedule-carousel-prev i";

      Carousel.prototype.carousel_timestamp = ".schedule-carousel-timestamp";

      Carousel.prototype.carousel_content = ".schedule-carousel-content";

      Carousel.prototype.$content = null;

      Carousel.prototype.bind = function() {
        this.bindItem("click", this.next, this.nextItem);
        this.bindItem("click", this.prev, this.prevItem);
        return true;
      };

      Carousel.prototype.renderScheduleItem = function(response) {
        var data, directives;
        if (response.length === 0) {
          return;
        }
        data = {
          "timestamp": response['start']['timestamp'],
          "schedule-item": {
            "title-link": response['title'],
            "formatted-date": response['start']['formatted_date'],
            "formatted-time": {
              "start-time": response['start']['formatted_time'],
              "finish-time": response['finish']['formatted_time']
            }
          }
        };
        directives = {
          "schedule-carousel-timestamp": {
            "data-timestamp": function() {
              return "" + this.timestamp;
            }
          }
        };
        this.$content.render(data, directives);
        return true;
      };

      Carousel.prototype.getEpisode = function(timestamp, direction) {
        var route;
        route = "station/episode/" + direction + "/" + timestamp;
        return $.get(route, this.renderScheduleItem);
      };

      Carousel.prototype.nextItem = function(event) {
        var timestamp;
        this.$content = $(event.target).parent().parent().find(this.carousel_content);
        timestamp = this.$content.find(this.carousel_timestamp).attr("data-timestamp");
        this.getEpisode(timestamp, 'next');
        return true;
      };

      Carousel.prototype.prevItem = function(event) {
        var timestamp;
        this.$content = $(event.target).parent().parent().find(this.carousel_content);
        timestamp = this.$content.find(this.carousel_timestamp).attr("data-timestamp");
        this.getEpisode(timestamp, 'prev');
        return true;
      };

      return Carousel;

    })(C4.Components.Base);
  })(jQuery);

}).call(this);
